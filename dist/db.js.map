{"version":3,"sources":["../src/db.js"],"names":[],"mappings":"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","file":"db.js","sourcesContent":["(function (window) {\r\n    'use strict';\r\n\r\n    const IDBKeyRange = window.IDBKeyRange || window.webkitIDBKeyRange;\r\n    const transactionModes = {\r\n        readonly: 'readonly',\r\n        readwrite: 'readwrite'\r\n    };\r\n    const hasOwn = Object.prototype.hasOwnProperty;\r\n    const defaultMapper = x => x;\r\n\r\n    let indexedDB = (function () {\r\n        if (!indexedDB) {\r\n            indexedDB = window.indexedDB || window.webkitIndexedDB || window.mozIndexedDB || window.oIndexedDB || window.msIndexedDB || ((window.indexedDB === null && window.shimIndexedDB) ? window.shimIndexedDB : undefined);\r\n\r\n            if (!indexedDB) {\r\n                throw new Error('IndexedDB required');\r\n            }\r\n        }\r\n        return indexedDB;\r\n    })();\r\n\r\n    let dbCache = {};\r\n\r\n    var Server = function (db, name) {\r\n        var closed = false;\r\n\r\n        this.getIndexedDB = () => db;\r\n\r\n        this.add = function (table, ...args) {\r\n            if (closed) {\r\n                throw new Error('Database has been closed');\r\n            }\r\n\r\n            var records = [];\r\n\r\n            var isArray = Array.isArray;\r\n            for (var i = 0, alm = args.length; i < alm; i++) {\r\n                var aip = args[i];\r\n                if (isArray(aip)) {\r\n                    records = records.concat(aip);\r\n                } else {\r\n                    records.push(aip);\r\n                }\r\n            }\r\n\r\n            var transaction = db.transaction(table, transactionModes.readwrite);\r\n            var store = transaction.objectStore(table);\r\n\r\n            return new Promise(function (resolve, reject) {\r\n                records.forEach(function (record) {\r\n                    var req;\r\n                    if (record.item && record.key) {\r\n                        var key = record.key;\r\n                        record = record.item;\r\n                        req = store.add(record, key);\r\n                    } else {\r\n                        req = store.add(record);\r\n                    }\r\n\r\n                    req.onsuccess = function (e) {\r\n                        var target = e.target;\r\n                        var keyPath = target.source.keyPath;\r\n                        if (keyPath === null) {\r\n                            keyPath = '__id__';\r\n                        }\r\n                        Object.defineProperty(record, keyPath, {\r\n                            value: target.result,\r\n                            enumerable: true\r\n                        });\r\n                    };\r\n                });\r\n\r\n                transaction.oncomplete = () => resolve(records, this);\r\n\r\n                transaction.onerror = e => {\r\n                    // prevent Firefox from throwing a ConstraintError and aborting (hard)\r\n                    // https://bugzilla.mozilla.org/show_bug.cgi?id=872873\r\n                    e.preventDefault();\r\n                    reject(e);\r\n                };\r\n                transaction.onabort = e => reject(e);\r\n            });\r\n        };\r\n\r\n        this.update = function (table, ...records) {\r\n            if (closed) {\r\n                throw new Error('Database has been closed');\r\n            }\r\n\r\n            var transaction = db.transaction(table, transactionModes.readwrite);\r\n            var store = transaction.objectStore(table);\r\n\r\n            return new Promise(function (resolve, reject) {\r\n                records.forEach(function (record) {\r\n                    if (record.item && record.key) {\r\n                        var key = record.key;\r\n                        record = record.item;\r\n                        store.put(record, key);\r\n                    } else {\r\n                        store.put(record);\r\n                    }\r\n                });\r\n\r\n                transaction.oncomplete = () => resolve(records, this);\r\n                transaction.onerror = e => reject(e);\r\n                transaction.onabort = e => reject(e);\r\n            });\r\n        };\r\n\r\n        this.remove = function (table, key) {\r\n            if (closed) {\r\n                throw new Error('Database has been closed');\r\n            }\r\n            var transaction = db.transaction(table, transactionModes.readwrite);\r\n            var store = transaction.objectStore(table);\r\n\r\n            return new Promise(function (resolve, reject) {\r\n                store.delete(key);\r\n                transaction.oncomplete = () => resolve(key);\r\n                transaction.onerror = e => reject(e);\r\n            });\r\n        };\r\n\r\n        this.clear = function (table) {\r\n            if (closed) {\r\n                throw new Error('Database has been closed');\r\n            }\r\n            var transaction = db.transaction(table, transactionModes.readwrite);\r\n            var store = transaction.objectStore(table);\r\n\r\n            store.clear();\r\n            return new Promise(function (resolve, reject) {\r\n                transaction.oncomplete = () => resolve();\r\n                transaction.onerror = e => reject(e);\r\n            });\r\n        };\r\n\r\n        this.close = function () {\r\n            if (closed) {\r\n                throw new Error('Database has been closed');\r\n            }\r\n            db.close();\r\n            closed = true;\r\n            delete dbCache[name];\r\n        };\r\n\r\n        this.get = function (table, id) {\r\n            if (closed) {\r\n                throw new Error('Database has been closed');\r\n            }\r\n            var transaction = db.transaction(table);\r\n            var store = transaction.objectStore(table);\r\n\r\n            var req = store.get(id);\r\n            return new Promise(function (resolve, reject) {\r\n                req.onsuccess = e => resolve(e.target.result);\r\n                transaction.onerror = e => reject(e);\r\n            });\r\n        };\r\n\r\n        this.query = function (table, index) {\r\n            if (closed) {\r\n                throw new Error('Database has been closed');\r\n            }\r\n            return new IndexQuery(table, db, index);\r\n        };\r\n\r\n        this.count = function (table, key) {\r\n            if (closed) {\r\n                throw new Error('Database has been closed');\r\n            }\r\n            var transaction = db.transaction(table);\r\n            var store = transaction.objectStore(table);\r\n\r\n            return new Promise((resolve, reject) => {\r\n                var req = store.count();\r\n                req.onsuccess = e => resolve(e.target.result);\r\n                transaction.onerror = e => reject(e);\r\n            });\r\n        };\r\n\r\n        [].map.call(db.objectStoreNames, storeName => {\r\n            this[storeName] = {};\r\n            var keys = Object.keys(this);\r\n            keys.filter(key => key !== 'close')\r\n                .map(key =>\r\n                    this[storeName][key] = (...args) => this[key].apply(this, [storeName].concat(args))\r\n                );\r\n        });\r\n    };\r\n\r\n    var IndexQuery = function (table, db, indexName) {\r\n        var modifyObj = false;\r\n\r\n        var runQuery = function (type, args, cursorType, direction, limitRange, filters, mapper) {\r\n            var transaction = db.transaction(table, modifyObj ? transactionModes.readwrite : transactionModes.readonly);\r\n            var store = transaction.objectStore(table);\r\n            var index = indexName ? store.index(indexName) : store;\r\n            var keyRange = type ? IDBKeyRange[type].apply(null, args) : null;\r\n            var results = [];\r\n            var indexArgs = [keyRange];\r\n            var counter = 0;\r\n\r\n            limitRange = limitRange || null;\r\n            filters = filters || [];\r\n            if (cursorType !== 'count') {\r\n                indexArgs.push(direction || 'next');\r\n            }\r\n\r\n            // create a function that will set in the modifyObj properties into\r\n            // the passed record.\r\n            var modifyKeys = modifyObj ? Object.keys(modifyObj) : false;\r\n            var modifyRecord = function (record) {\r\n                for (var i = 0; i < modifyKeys.length; i++) {\r\n                    var key = modifyKeys[i];\r\n                    var val = modifyObj[key];\r\n                    if (val instanceof Function) { val = val(record); }\r\n                    record[key] = val;\r\n                }\r\n                return record;\r\n            };\r\n\r\n            index[cursorType].apply(index, indexArgs).onsuccess = function (e) {\r\n                var cursor = e.target.result;\r\n                if (typeof cursor === 'number') {\r\n                    results = cursor;\r\n                } else if (cursor) {\r\n                    if (limitRange !== null && limitRange[0] > counter) {\r\n                        counter = limitRange[0];\r\n                        cursor.advance(limitRange[0]);\r\n                    } else if (limitRange !== null && counter >= (limitRange[0] + limitRange[1])) {\r\n                        // out of limit range... skip\r\n                    } else {\r\n                        var matchFilter = true;\r\n                        var result = 'value' in cursor ? cursor.value : cursor.key;\r\n\r\n                        filters.forEach(function (filter) {\r\n                            if (!filter || !filter.length) {\r\n                                // Invalid filter do nothing\r\n                            } else if (filter.length === 2) {\r\n                                matchFilter = matchFilter && (result[filter[0]] === filter[1]);\r\n                            } else {\r\n                                matchFilter = matchFilter && filter[0].apply(undefined, [result]);\r\n                            }\r\n                        });\r\n\r\n                        if (matchFilter) {\r\n                            counter++;\r\n                            results.push(mapper(result));\r\n                            // if we're doing a modify, run it now\r\n                            if (modifyObj) {\r\n                                result = modifyRecord(result);\r\n                                cursor.update(result);\r\n                            }\r\n                        }\r\n                        cursor.continue();\r\n                    }\r\n                }\r\n            };\r\n\r\n            return new Promise(function (resolve, reject) {\r\n                transaction.oncomplete = () => resolve(results);\r\n                transaction.onerror = e => reject(e);\r\n                transaction.onabort = e => reject(e);\r\n            });\r\n        };\r\n\r\n        var Query = function (type, args) {\r\n            var direction = 'next';\r\n            var cursorType = 'openCursor';\r\n            var filters = [];\r\n            var limitRange = null;\r\n            var mapper = defaultMapper;\r\n            var unique = false;\r\n\r\n            var execute = function () {\r\n                return runQuery(type, args, cursorType, unique ? direction + 'unique' : direction, limitRange, filters, mapper);\r\n            };\r\n\r\n            var limit = function () {\r\n                limitRange = Array.prototype.slice.call(arguments, 0, 2);\r\n                if (limitRange.length === 1) {\r\n                    limitRange.unshift(0);\r\n                }\r\n\r\n                return {\r\n                    execute: execute\r\n                };\r\n            };\r\n            var count = function () {\r\n                direction = null;\r\n                cursorType = 'count';\r\n\r\n                return {\r\n                    execute: execute\r\n                };\r\n            };\r\n\r\n            var filter, desc, distinct, modify, map;\r\n            var keys = function () {\r\n                cursorType = 'openKeyCursor';\r\n\r\n                return {\r\n                    desc: desc,\r\n                    execute: execute,\r\n                    filter: filter,\r\n                    distinct: distinct,\r\n                    map: map\r\n                };\r\n            };\r\n            filter = function () {\r\n                filters.push(Array.prototype.slice.call(arguments, 0, 2));\r\n\r\n                return {\r\n                    keys: keys,\r\n                    execute: execute,\r\n                    filter: filter,\r\n                    desc: desc,\r\n                    distinct: distinct,\r\n                    modify: modify,\r\n                    limit: limit,\r\n                    map: map\r\n                };\r\n            };\r\n            desc = function () {\r\n                direction = 'prev';\r\n\r\n                return {\r\n                    keys: keys,\r\n                    execute: execute,\r\n                    filter: filter,\r\n                    distinct: distinct,\r\n                    modify: modify,\r\n                    map: map\r\n                };\r\n            };\r\n            distinct = function () {\r\n                unique = true;\r\n                return {\r\n                    keys: keys,\r\n                    count: count,\r\n                    execute: execute,\r\n                    filter: filter,\r\n                    desc: desc,\r\n                    modify: modify,\r\n                    map: map\r\n                };\r\n            };\r\n            modify = function (update) {\r\n                modifyObj = update;\r\n                return {\r\n                    execute: execute\r\n                };\r\n            };\r\n            map = function (fn) {\r\n                mapper = fn;\r\n\r\n                return {\r\n                    execute: execute,\r\n                    count: count,\r\n                    keys: keys,\r\n                    filter: filter,\r\n                    desc: desc,\r\n                    distinct: distinct,\r\n                    modify: modify,\r\n                    limit: limit,\r\n                    map: map\r\n                };\r\n            };\r\n\r\n            return {\r\n                execute: execute,\r\n                count: count,\r\n                keys: keys,\r\n                filter: filter,\r\n                desc: desc,\r\n                distinct: distinct,\r\n                modify: modify,\r\n                limit: limit,\r\n                map: map\r\n            };\r\n        };\r\n\r\n        ['only', 'bound', 'upperBound', 'lowerBound'].forEach((name) => {\r\n            this[name] = function () {\r\n                return Query(name, arguments);\r\n            };\r\n        });\r\n\r\n        this.filter = function () {\r\n            var query = Query(null, null);\r\n            return query.filter.apply(query, arguments);\r\n        };\r\n\r\n        this.all = function () {\r\n            return this.filter();\r\n        };\r\n    };\r\n\r\n    var createSchema = function (e, schema, db) {\r\n        if (typeof schema === 'function') {\r\n            schema = schema();\r\n        }\r\n\r\n        var tableName;\r\n        for (tableName in schema) {\r\n            var table = schema[tableName];\r\n            var store;\r\n            if (!hasOwn.call(schema, tableName) || db.objectStoreNames.contains(tableName)) {\r\n                store = e.currentTarget.transaction.objectStore(tableName);\r\n            } else {\r\n                store = db.createObjectStore(tableName, table.key);\r\n            }\r\n\r\n            var indexKey;\r\n            for (indexKey in table.indexes) {\r\n                var index = table.indexes[indexKey];\r\n                try {\r\n                    store.index(indexKey);\r\n                } catch (err) {\r\n                    store.createIndex(indexKey, index.key || indexKey, Object.keys(index).length ? index : { unique: false });\r\n                }\r\n            }\r\n        }\r\n    };\r\n\r\n    var open = function (e, server, version, schema) {\r\n        var db = e.target.result;\r\n        var s = new Server(db, server);\r\n\r\n        dbCache[server] = db;\r\n\r\n        return Promise.resolve(s);\r\n    };\r\n\r\n    var db = {\r\n        version: '0.11.0',\r\n        open: function (options) {\r\n            return new Promise(function (resolve, reject) {\r\n                if (dbCache[options.server]) {\r\n                    open({\r\n                        target: {\r\n                            result: dbCache[options.server]\r\n                        }\r\n                    }, options.server, options.version, options.schema)\r\n                    .then(resolve, reject);\r\n                } else {\r\n                    let request = indexedDB.open(options.server, options.version);\r\n\r\n                    request.onsuccess = e => open(e, options.server, options.version, options.schema).then(resolve, reject);\r\n                    request.onupgradeneeded = e => createSchema(e, options.schema, e.target.result);\r\n                    request.onerror = e => reject(e);\r\n                }\r\n            });\r\n        },\r\n\r\n        'delete': function (dbName) {\r\n            return new Promise(function (resolve, reject) {\r\n                var request = indexedDB.deleteDatabase(dbName);\r\n\r\n                request.onsuccess = () => resolve();\r\n                request.onerror = e => reject(e);\r\n                request.onblocked = e => reject(e);\r\n            });\r\n        }\r\n    };\r\n\r\n    if (typeof module !== 'undefined' && typeof module.exports !== 'undefined') {\r\n        module.exports = db;\r\n    } else if (typeof define === 'function' && define.amd) {\r\n        define(function () { return db; });\r\n    } else {\r\n        window.db = db;\r\n    }\r\n})(window);\r\n"]}