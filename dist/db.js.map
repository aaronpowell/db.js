{"version":3,"sources":["../src/db.js"],"names":[],"mappings":"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","file":"db.js","sourcesContent":["import IdbImport from './idb-import';\r\nimport batch, {transactionalBatch} from 'idb-batch';\r\n\r\n(function (local) {\r\n    'use strict';\r\n    const hasOwn = Object.prototype.hasOwnProperty;\r\n\r\n    const indexedDB = local.indexedDB || local.webkitIndexedDB ||\r\n        local.mozIndexedDB || local.oIndexedDB || local.msIndexedDB ||\r\n        local.shimIndexedDB || (function () {\r\n            throw new Error('IndexedDB required');\r\n        }());\r\n    const IDBKeyRange = local.IDBKeyRange || local.webkitIDBKeyRange;\r\n\r\n    const defaultMapper = x => x;\r\n    const serverEvents = ['abort', 'error', 'versionchange'];\r\n    const transactionModes = {\r\n        readonly: 'readonly',\r\n        readwrite: 'readwrite'\r\n    };\r\n\r\n    const dbCache = {};\r\n\r\n    function isObject (item) {\r\n        return item && typeof item === 'object';\r\n    }\r\n\r\n    function mongoDBToKeyRangeArgs (opts) {\r\n        const keys = Object.keys(opts).sort();\r\n        if (keys.length === 1) {\r\n            const key = keys[0];\r\n            const val = opts[key];\r\n            let name, inclusive;\r\n            switch (key) {\r\n            case 'eq': name = 'only'; break;\r\n            case 'gt':\r\n                name = 'lowerBound';\r\n                inclusive = true;\r\n                break;\r\n            case 'lt':\r\n                name = 'upperBound';\r\n                inclusive = true;\r\n                break;\r\n            case 'gte': name = 'lowerBound'; break;\r\n            case 'lte': name = 'upperBound'; break;\r\n            default: throw new TypeError('`' + key + '` is not a valid key');\r\n            }\r\n            return [name, [val, inclusive]];\r\n        }\r\n        const x = opts[keys[0]];\r\n        const y = opts[keys[1]];\r\n        const pattern = keys.join('-');\r\n\r\n        switch (pattern) {\r\n        case 'gt-lt': case 'gt-lte': case 'gte-lt': case 'gte-lte':\r\n            return ['bound', [x, y, keys[0] === 'gt', keys[1] === 'lt']];\r\n        default: throw new TypeError(\r\n          '`' + pattern + '` are conflicted keys'\r\n        );\r\n        }\r\n    }\r\n    function mongoifyKey (key) {\r\n        if (key && typeof key === 'object' && !(key instanceof IDBKeyRange)) {\r\n            const [type, args] = mongoDBToKeyRangeArgs(key);\r\n            return IDBKeyRange[type](...args);\r\n        }\r\n        return key;\r\n    }\r\n\r\n    const IndexQuery = function (table, db, indexName, preexistingError, trans) {\r\n        let modifyObj = null;\r\n\r\n        const runQuery = function (type, args, cursorType, direction, limitRange, filters, mapper) {\r\n            return new Promise(function (resolve, reject) {\r\n                const keyRange = type ? IDBKeyRange[type](...args) : null; // May throw\r\n                filters = filters || [];\r\n                limitRange = limitRange || null;\r\n\r\n                let results = [];\r\n                let counter = 0;\r\n                const indexArgs = [keyRange];\r\n\r\n                const transaction = trans || db.transaction(table, modifyObj ? transactionModes.readwrite : transactionModes.readonly);\r\n                transaction.addEventListener('error', e => reject(e));\r\n                transaction.addEventListener('abort', e => reject(e));\r\n                transaction.addEventListener('complete', () => resolve(results));\r\n\r\n                const store = transaction.objectStore(table); // if bad, db.transaction will reject first\r\n                const index = typeof indexName === 'string' ? store.index(indexName) : store;\r\n\r\n                if (cursorType !== 'count') {\r\n                    indexArgs.push(direction || 'next');\r\n                }\r\n\r\n                // Create a function that will set in the modifyObj properties into\r\n                // the passed record.\r\n                const modifyKeys = modifyObj ? Object.keys(modifyObj) : [];\r\n\r\n                const modifyRecord = function (record) {\r\n                    modifyKeys.forEach(key => {\r\n                        let val = modifyObj[key];\r\n                        if (typeof val === 'function') { val = val(record); }\r\n                        record[key] = val;\r\n                    });\r\n                    return record;\r\n                };\r\n\r\n                index[cursorType](...indexArgs).onsuccess = function (e) { // indexArgs are already validated\r\n                    const cursor = e.target.result;\r\n                    if (typeof cursor === 'number') {\r\n                        results = cursor;\r\n                    } else if (cursor) {\r\n                        if (limitRange !== null && limitRange[0] > counter) {\r\n                            counter = limitRange[0];\r\n                            cursor.advance(limitRange[0]); // Will throw on 0, but condition above prevents since counter always 0+\r\n                        } else if (limitRange !== null && counter >= (limitRange[0] + limitRange[1])) {\r\n                            // Out of limit range... skip\r\n                        } else {\r\n                            let matchFilter = true;\r\n                            let result = 'value' in cursor ? cursor.value : cursor.key;\r\n\r\n                            try { // We must manually catch for this promise as we are within an async event function\r\n                                filters.forEach(function (filter) {\r\n                                    let propObj = filter[0];\r\n                                    if (typeof propObj === 'function') {\r\n                                        matchFilter = matchFilter && propObj(result); // May throw with filter on non-object\r\n                                    } else {\r\n                                        if (!propObj || typeof propObj !== 'object') {\r\n                                            propObj = {[propObj]: filter[1]};\r\n                                        }\r\n                                        Object.keys(propObj).forEach((prop) => {\r\n                                            matchFilter = matchFilter && (result[prop] === propObj[prop]); // May throw with error in filter function\r\n                                        });\r\n                                    }\r\n                                });\r\n\r\n                                if (matchFilter) {\r\n                                    counter++;\r\n                                    // If we're doing a modify, run it now\r\n                                    if (modifyObj) {\r\n                                        result = modifyRecord(result);  // May throw\r\n                                        cursor.update(result); // May throw as `result` should only be a \"structured clone\"-able object\r\n                                    }\r\n                                    results.push(mapper(result)); // May throw\r\n                                }\r\n                            } catch (err) {\r\n                                reject(err);\r\n                                return;\r\n                            }\r\n                            cursor.continue();\r\n                        }\r\n                    }\r\n                };\r\n            });\r\n        };\r\n\r\n        const Query = function (type, args, queuedError) {\r\n            const filters = [];\r\n            let direction = 'next';\r\n            let cursorType = 'openCursor';\r\n            let limitRange = null;\r\n            let mapper = defaultMapper;\r\n            let unique = false;\r\n            let error = preexistingError || queuedError;\r\n\r\n            const execute = function () {\r\n                if (error) {\r\n                    return Promise.reject(error);\r\n                }\r\n                return runQuery(type, args, cursorType, unique ? direction + 'unique' : direction, limitRange, filters, mapper);\r\n            };\r\n\r\n            const count = function () {\r\n                direction = null;\r\n                cursorType = 'count';\r\n                return {execute};\r\n            };\r\n\r\n            const keys = function () {\r\n                cursorType = 'openKeyCursor';\r\n                return {desc, distinct, execute, filter, limit, map};\r\n            };\r\n\r\n            const limit = function (start, end) {\r\n                limitRange = !end ? [0, start] : [start, end];\r\n                error = limitRange.some(val => typeof val !== 'number') ? new Error('limit() arguments must be numeric') : error;\r\n                return {desc, distinct, filter, keys, execute, map, modify};\r\n            };\r\n\r\n            const filter = function (prop, val) {\r\n                filters.push([prop, val]);\r\n                return {desc, distinct, execute, filter, keys, limit, map, modify};\r\n            };\r\n\r\n            const desc = function () {\r\n                direction = 'prev';\r\n                return {distinct, execute, filter, keys, limit, map, modify};\r\n            };\r\n\r\n            const distinct = function () {\r\n                unique = true;\r\n                return {count, desc, execute, filter, keys, limit, map, modify};\r\n            };\r\n\r\n            const modify = function (update) {\r\n                modifyObj = update && typeof update === 'object' ? update : null;\r\n                return {execute};\r\n            };\r\n\r\n            const map = function (fn) {\r\n                mapper = fn;\r\n                return {count, desc, distinct, execute, filter, keys, limit, modify};\r\n            };\r\n\r\n            return {count, desc, distinct, execute, filter, keys, limit, map, modify};\r\n        };\r\n\r\n        ['only', 'bound', 'upperBound', 'lowerBound'].forEach((name) => {\r\n            this[name] = function () {\r\n                return Query(name, arguments);\r\n            };\r\n        });\r\n\r\n        this.range = function (opts) {\r\n            let error;\r\n            let keyRange = [null, null];\r\n            try {\r\n                keyRange = mongoDBToKeyRangeArgs(opts);\r\n            } catch (e) {\r\n                error = e;\r\n            }\r\n            return Query(...keyRange, error);\r\n        };\r\n\r\n        this.filter = function (...args) {\r\n            const query = Query(null, null);\r\n            return query.filter(...args);\r\n        };\r\n\r\n        this.all = function () {\r\n            return this.filter();\r\n        };\r\n    };\r\n\r\n    const Server = function (db, name, version, noServerMethods) {\r\n        let closed = false;\r\n        let trans;\r\n        const setupTransactionAndStore = (db, table, records, resolve, reject, readonly) => {\r\n            const transaction = trans || db.transaction(table, readonly ? transactionModes.readonly : transactionModes.readwrite);\r\n            transaction.addEventListener('error', e => {\r\n                // prevent throwing aborting (hard)\r\n                // https://bugzilla.mozilla.org/show_bug.cgi?id=872873\r\n                e.preventDefault();\r\n                reject(e);\r\n            });\r\n            transaction.addEventListener('abort', e => reject(e));\r\n            transaction.addEventListener('complete', () => resolve(records));\r\n            return transaction.objectStore(table);\r\n        };\r\n        const adapterCb = (tr, cb) => {\r\n            if (!trans) trans = tr;\r\n            return cb(tr, this);\r\n        };\r\n\r\n        this.getIndexedDB = () => db;\r\n        this.isClosed = () => closed;\r\n\r\n        this.batch = function (storeOpsArr, opts = {extraStores: [], parallel: false}) {\r\n            opts = opts || {};\r\n            var {extraStores, parallel} = opts; // We avoid `resolveEarly`\r\n            return transactionalBatch(db, storeOpsArr, {adapterCb, extraStores, parallel}).then((res) => {\r\n                trans = undefined;\r\n                return res;\r\n            });\r\n        };\r\n        this.tableBatch = function (table, ops, opts = {parallel: false}) {\r\n            opts = opts || {};\r\n            return batch(db, table, ops, {adapterCb, parallel: opts.parallel}).then((res) => {\r\n                trans = undefined;\r\n                return res;\r\n            });\r\n        };\r\n\r\n        this.query = function (table, index) {\r\n            const error = closed ? new Error('Database has been closed') : null;\r\n            return new IndexQuery(table, db, index, error, trans); // Does not throw by itself\r\n        };\r\n\r\n        this.add = function (table, ...args) {\r\n            return new Promise(function (resolve, reject) {\r\n                if (closed) {\r\n                    reject(new Error('Database has been closed'));\r\n                    return;\r\n                }\r\n\r\n                const records = args.reduce(function (records, aip) {\r\n                    return records.concat(aip);\r\n                }, []);\r\n\r\n                const store = setupTransactionAndStore(db, table, records, resolve, reject);\r\n\r\n                records.some(function (record) {\r\n                    let req, key;\r\n                    if (isObject(record) && hasOwn.call(record, 'item')) {\r\n                        key = record.key;\r\n                        record = record.item;\r\n                        if (key != null) {\r\n                            key = mongoifyKey(key); // May throw\r\n                        }\r\n                    }\r\n\r\n                    // Safe to add since in readwrite, but may still throw\r\n                    if (key != null) {\r\n                        req = store.add(record, key);\r\n                    } else {\r\n                        req = store.add(record);\r\n                    }\r\n\r\n                    req.onsuccess = function (e) {\r\n                        if (!isObject(record)) {\r\n                            return;\r\n                        }\r\n                        const target = e.target;\r\n                        let keyPath = target.source.keyPath;\r\n                        if (keyPath === null) {\r\n                            keyPath = '__id__';\r\n                        }\r\n                        if (hasOwn.call(record, keyPath)) {\r\n                            return;\r\n                        }\r\n                        Object.defineProperty(record, keyPath, {\r\n                            value: target.result,\r\n                            enumerable: true\r\n                        });\r\n                    };\r\n                });\r\n            });\r\n        };\r\n\r\n        this.update = function (table, ...args) {\r\n            return new Promise(function (resolve, reject) {\r\n                if (closed) {\r\n                    reject(new Error('Database has been closed'));\r\n                    return;\r\n                }\r\n\r\n                const records = args.reduce(function (records, aip) {\r\n                    return records.concat(aip);\r\n                }, []);\r\n\r\n                const store = setupTransactionAndStore(db, table, records, resolve, reject);\r\n\r\n                records.some(function (record) {\r\n                    let req, key;\r\n                    if (isObject(record) && hasOwn.call(record, 'item')) {\r\n                        key = record.key;\r\n                        record = record.item;\r\n                        if (key != null) {\r\n                            key = mongoifyKey(key); // May throw\r\n                        }\r\n                    }\r\n                    // These can throw DataError, e.g., if function passed in\r\n                    if (key != null) {\r\n                        req = store.put(record, key);\r\n                    } else {\r\n                        req = store.put(record);\r\n                    }\r\n\r\n                    req.onsuccess = function (e) {\r\n                        if (!isObject(record)) {\r\n                            return;\r\n                        }\r\n                        const target = e.target;\r\n                        let keyPath = target.source.keyPath;\r\n                        if (keyPath === null) {\r\n                            keyPath = '__id__';\r\n                        }\r\n                        if (hasOwn.call(record, keyPath)) {\r\n                            return;\r\n                        }\r\n                        Object.defineProperty(record, keyPath, {\r\n                            value: target.result,\r\n                            enumerable: true\r\n                        });\r\n                    };\r\n                });\r\n            });\r\n        };\r\n\r\n        this.put = function (...args) {\r\n            return this.update(...args);\r\n        };\r\n\r\n        this.remove = function (table, key) {\r\n            return new Promise(function (resolve, reject) {\r\n                if (closed) {\r\n                    reject(new Error('Database has been closed'));\r\n                    return;\r\n                }\r\n                key = mongoifyKey(key); // May throw\r\n\r\n                const store = setupTransactionAndStore(db, table, key, resolve, reject);\r\n\r\n                store.delete(key); // May throw\r\n            });\r\n        };\r\n\r\n        this.del = this.delete = function (...args) {\r\n            return this.remove(...args);\r\n        };\r\n\r\n        this.clear = function (table) {\r\n            return new Promise(function (resolve, reject) {\r\n                if (closed) {\r\n                    reject(new Error('Database has been closed'));\r\n                    return;\r\n                }\r\n                const store = setupTransactionAndStore(db, table, undefined, resolve, reject);\r\n                store.clear();\r\n            });\r\n        };\r\n\r\n        this.close = function () {\r\n            return new Promise(function (resolve, reject) {\r\n                if (closed) {\r\n                    reject(new Error('Database has been closed'));\r\n                    return;\r\n                }\r\n                closed = true;\r\n                delete dbCache[name][version];\r\n                db.close();\r\n                resolve();\r\n            });\r\n        };\r\n\r\n        this.get = function (table, key) {\r\n            return new Promise(function (resolve, reject) {\r\n                if (closed) {\r\n                    reject(new Error('Database has been closed'));\r\n                    return;\r\n                }\r\n                key = mongoifyKey(key); // May throw\r\n\r\n                const store = setupTransactionAndStore(db, table, undefined, resolve, reject, true);\r\n\r\n                const req = store.get(key);\r\n                req.onsuccess = e => resolve(e.target.result);\r\n            });\r\n        };\r\n\r\n        this.count = function (table, key) {\r\n            return new Promise((resolve, reject) => {\r\n                if (closed) {\r\n                    reject(new Error('Database has been closed'));\r\n                    return;\r\n                }\r\n                key = mongoifyKey(key); // May throw\r\n\r\n                const store = setupTransactionAndStore(db, table, undefined, resolve, reject, true);\r\n\r\n                const req = key == null ? store.count() : store.count(key); // May throw\r\n                req.onsuccess = e => resolve(e.target.result);\r\n            });\r\n        };\r\n\r\n        this.addEventListener = function (eventName, handler) {\r\n            if (!serverEvents.includes(eventName)) {\r\n                throw new Error('Unrecognized event type ' + eventName);\r\n            }\r\n            if (eventName === 'error') {\r\n                db.addEventListener(eventName, function (e) {\r\n                    e.preventDefault(); // Needed to prevent hard abort with ConstraintError\r\n                    handler(e);\r\n                });\r\n                return;\r\n            }\r\n            db.addEventListener(eventName, handler);\r\n        };\r\n\r\n        this.removeEventListener = function (eventName, handler) {\r\n            if (!serverEvents.includes(eventName)) {\r\n                throw new Error('Unrecognized event type ' + eventName);\r\n            }\r\n            db.removeEventListener(eventName, handler);\r\n        };\r\n\r\n        serverEvents.forEach(function (evName) {\r\n            this[evName] = function (handler) {\r\n                this.addEventListener(evName, handler);\r\n                return this;\r\n            };\r\n        }, this);\r\n\r\n        if (noServerMethods) {\r\n            return;\r\n        }\r\n\r\n        let err;\r\n        Array.from(db.objectStoreNames).some(storeName => {\r\n            if (this[storeName]) {\r\n                err = new Error('The store name, \"' + storeName + '\", which you have attempted to load, conflicts with db.js method names.\"');\r\n                this.close();\r\n                return true;\r\n            }\r\n            this[storeName] = {};\r\n            const keys = Object.keys(this);\r\n            keys.filter(key => !(([...serverEvents, 'close', 'batch', 'addEventListener', 'removeEventListener']).includes(key)))\r\n                .map(key =>\r\n                    this[storeName][key] = (...args) => this[key](storeName, ...args)\r\n                );\r\n        });\r\n        return err;\r\n    };\r\n\r\n    const open = function (db, server, version, noServerMethods) {\r\n        dbCache[server][version] = db;\r\n\r\n        return new Server(db, server, version, noServerMethods);\r\n    };\r\n\r\n    const db = {\r\n        version: '0.15.0',\r\n        open: function (options) {\r\n            const server = options.server;\r\n            const noServerMethods = options.noServerMethods;\r\n            const clearUnusedStores = options.clearUnusedStores !== false;\r\n            const clearUnusedIndexes = options.clearUnusedIndexes !== false;\r\n            let version = options.version || 1;\r\n            let schema = options.schema;\r\n            let schemas = options.schemas;\r\n            let schemaType = options.schemaType || (schema ? 'whole' : 'mixed');\r\n            if (!dbCache[server]) {\r\n                dbCache[server] = {};\r\n            }\r\n            const openDb = function (db) {\r\n                const s = open(db, server, version, noServerMethods);\r\n                if (s instanceof Error) {\r\n                    throw s;\r\n                }\r\n                return s;\r\n            };\r\n\r\n            return new Promise(function (resolve, reject) {\r\n                if (dbCache[server][version]) {\r\n                    const s = open(dbCache[server][version], server, version, noServerMethods);\r\n                    if (s instanceof Error) {\r\n                        reject(s);\r\n                        return;\r\n                    }\r\n                    resolve(s);\r\n                    return;\r\n                }\r\n                const idbimport = new IdbImport();\r\n                let p = Promise.resolve();\r\n                if (schema || schemas || options.schemaBuilder) {\r\n                    const _addCallback = idbimport.addCallback;\r\n                    idbimport.addCallback = function (cb) {\r\n                        function newCb (db) {\r\n                            const s = open(db, server, version, noServerMethods);\r\n                            if (s instanceof Error) {\r\n                                throw s;\r\n                            }\r\n                            return cb(db, s);\r\n                        }\r\n                        return _addCallback.call(idbimport, newCb);\r\n                    };\r\n\r\n                    p = p.then(() => {\r\n                        if (options.schemaBuilder) {\r\n                            return options.schemaBuilder(idbimport);\r\n                        }\r\n                    }).then(() => {\r\n                        if (schema) {\r\n                            switch (schemaType) {\r\n                            case 'mixed': case 'idb-schema': case 'merge': case 'whole': {\r\n                                schemas = {[version]: schema};\r\n                                break;\r\n                            }\r\n                            }\r\n                        }\r\n                        if (schemas) {\r\n                            idbimport.createVersionedSchema(schemas, schemaType, clearUnusedStores, clearUnusedIndexes);\r\n                        }\r\n                        const idbschemaVersion = idbimport.version();\r\n                        if (options.version && idbschemaVersion < version) {\r\n                            throw new Error(\r\n                                'Your highest schema building (IDBSchema) version (' + idbschemaVersion + ') ' +\r\n                                'must not be less than your designated version (' + version + ').'\r\n                            );\r\n                        }\r\n                        if (!options.version && idbschemaVersion > version) {\r\n                            version = idbschemaVersion;\r\n                        }\r\n                    });\r\n                }\r\n\r\n                p.then(() => {\r\n                    return idbimport.open(server, version);\r\n                }).catch((err) => {\r\n                    if (err.resume) {\r\n                        err.resume = err.resume.then(openDb);\r\n                    }\r\n                    if (err.retry) {\r\n                        const _retry = err.retry;\r\n                        err.retry = function () {\r\n                            _retry.call(err).then(openDb);\r\n                        };\r\n                    }\r\n                    throw err;\r\n                }).then(openDb).then(resolve).catch((e) => {\r\n                    reject(e);\r\n                });\r\n            });\r\n        },\r\n\r\n        del: function (dbName) {\r\n            return this.delete(dbName);\r\n        },\r\n        delete: function (dbName) {\r\n            return new Promise(function (resolve, reject) {\r\n                const request = indexedDB.deleteDatabase(dbName); // Does not throw\r\n\r\n                request.onsuccess = e => {\r\n                    // The following is needed currently by PhantomJS (though we cannot polyfill `oldVersion`): https://github.com/ariya/phantomjs/issues/14141\r\n                    if (!('newVersion' in e)) {\r\n                        e.newVersion = null;\r\n                    }\r\n                    resolve(e);\r\n                };\r\n                request.onerror = e => { // No errors currently\r\n                    e.preventDefault();\r\n                    reject(e);\r\n                };\r\n                request.onblocked = e => {\r\n                    // The following addresses part of https://bugzilla.mozilla.org/show_bug.cgi?id=1220279\r\n                    e = e.newVersion === null || typeof Proxy === 'undefined' ? e : new Proxy(e, {get: function (target, name) {\r\n                        return name === 'newVersion' ? null : target[name];\r\n                    }});\r\n                    const resume = new Promise(function (res, rej) {\r\n                        // We overwrite handlers rather than make a new\r\n                        //   delete() since the original request is still\r\n                        //   open and its onsuccess will still fire if\r\n                        //   the user unblocks by closing the blocking\r\n                        //   connection\r\n                        request.onsuccess = ev => {\r\n                            // The following are needed currently by PhantomJS: https://github.com/ariya/phantomjs/issues/14141\r\n                            if (!('newVersion' in ev)) {\r\n                                ev.newVersion = e.newVersion;\r\n                            }\r\n\r\n                            if (!('oldVersion' in ev)) {\r\n                                ev.oldVersion = e.oldVersion;\r\n                            }\r\n\r\n                            res(ev);\r\n                        };\r\n                        request.onerror = e => {\r\n                            e.preventDefault();\r\n                            rej(e);\r\n                        };\r\n                    });\r\n                    e.resume = resume;\r\n                    reject(e);\r\n                };\r\n            });\r\n        },\r\n\r\n        cmp: function (param1, param2) {\r\n            return new Promise(function (resolve, reject) {\r\n                resolve(indexedDB.cmp(param1, param2)); // May throw\r\n            });\r\n        }\r\n    };\r\n\r\n    if (typeof module !== 'undefined' && typeof module.exports !== 'undefined') {\r\n        module.exports = db;\r\n    } else if (typeof define === 'function' && define.amd) {\r\n        define(function () { return db; });\r\n    } else {\r\n        local.db = db;\r\n    }\r\n}(self));\r\n"]}